<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProjectMapper">
  
  <resultMap id="projectMap" type="com.eomcs.pms.domain.Project">
    <id column="no" property="no"/>
    <result column="title" property="title"/>
    <result column="sdt" property="startDate"/>
    <result column="edt" property="endDate"/>
    
    <association property="owner" javaType="com.eomcs.pms.domain.Member">
	    <id column="owner_no" property="no"/>
	    <result column="owner_name" property="name"/>
    </association>
  </resultMap>
  
  <insert id="insert" parameterType="com.eomcs.pms.domain.Project"
          useGeneratedKeys="true" keyColumn="no" keyProperty="no">
    insert into pms_project(title,content,sdt,edt,owner) 
    values(#{title}, #{content}, #{startDate}, #{endDate}, #{owner.no})
  </insert>
  <!-- 
    위의 SQL은 내부적으로 다음과 같이 실행된다.
    
    int insert(String sqlid, Project project) {
      // ProjectMapper.xml 파일에서 sqlid로 찾은 SQL 문을 꺼내온다.
      // 그리고 다음과 같이 실행할 것이다.
      PreparedStatement stmt = con.prepareStatement(
        "insert into pms_project(title,content,sdt,edt,owner) values(?,?,?,?,?)",
        Statement.RETURN_GENERATED_KEYS);
      
      stmt.setString(1, project.getTitle());
      stmt.setString(2, project.getContent());
      stmt.setString(3, project.getStartDate());
      stmt.setString(4, project.getEndDate());
      stmt.setString(5, project.getOwner().getNo());
      int count = stmt.executeUpdate();
      
      ResultSet keyRs = stmt.getGeneratedKeys();
      keyRs.next();
      int projectNo = keyRs.getInt(1);
      
      project.setNo(projectNo);
    }
   -->
  
  <select id="findAll" resultMap="projectMap">
    select
      p.no,
      p.title,
      p.sdt,
      p.edt,
      m.no as owner_no,
      m.name as owner_name
    from pms_project p
      inner join pms_member m on p.owner=m.no
    order by title asc
  </select>
  
  <select id="findByProjectNo" resultMap="taskMap" parameterType="int">
    select
      t.no,
      t.content,
      t.deadline,
      t.status,
      m.no as owner_no,
      m.name as owner_name,
      p.no as project_no,
      p.title as project_title
    from 
      pms_task t
      inner join pms_member m on t.owner=m.no
      inner join pms_project p on t.project_no=p.no
    where
      p.no = #{value}
    order by 
      p.no desc, t.content asc
  </select>
  
  <select id="findByNo" resultMap="taskMap" parameterType="int">
    select
      t.no,
      t.content,
      t.deadline,
      t.status,
      m.no as owner_no,
      m.name as owner_name,
      p.no as project_no,
      p.title as project_title
    from 
      pms_task t
      inner join pms_member m on t.owner=m.no
      inner join pms_project p on t.project_no=p.no
    where
      t.no = #{value}
  </select>
  
  <update id="update" parameterType="com.eomcs.pms.domain.Task">
    update pms_task set 
      content=#{content},
      deadline=#{deadline},
      owner=#{owner.no},
      status=#{status},
      project_no=#{projectNo} 
    where no=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from pms_task 
    where no = #{value}
  </delete>


  <insert id="insertMember" parameterType="map">
    insert into pms_member_project(member_no,project_no) 
    values(#{memberNo}, #{projectNo})
  </insert>
</mapper>







